<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maigangle.gyl.service.mapper.InvCheckInvDetailMapper" >
  <resultMap id="BaseResultMap" type="com.maigangle.gyl.facade.entity.InvCheckInvDetail" >
    <id column="CHECK_INV_DETAIL_ID" property="checkInvDetailId" jdbcType="VARCHAR" />
    <result column="CHECK_INV_ID" property="checkInvId" jdbcType="VARCHAR" />
    <result column="INVERTORY_ID" property="invertoryId" jdbcType="VARCHAR" />
    <result column="CHECK_RECORD" property="checkRecord" jdbcType="VARCHAR" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="IS_DEL" property="isDel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            AND IS_DEL = 'N'
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CHECK_INV_DETAIL_ID, CHECK_INV_ID, INVERTORY_ID, CHECK_RECORD, CREATE_USER, CREATE_DATE, 
    IS_DEL
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maigangle.gyl.facade.entity.InvCheckInvDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from TB_INV_CHECK_INV_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null" >
      WHERE IS_DEL = 'N'
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_INV_CHECK_INV_DETAIL
    where CHECK_INV_DETAIL_ID = #{checkInvDetailId,jdbcType=VARCHAR} AND IS_DEL = 'N'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TB_INV_CHECK_INV_DETAIL
    where CHECK_INV_DETAIL_ID = #{checkInvDetailId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.maigangle.gyl.facade.entity.InvCheckInvDetail" >
    <selectKey keyProperty="checkInvDetailId" resultType="String" order="BEFORE">
 		select sys_guid() from dual
	</selectKey>
    insert into TB_INV_CHECK_INV_DETAIL (CHECK_INV_DETAIL_ID, CHECK_INV_ID, INVERTORY_ID, 
      CHECK_RECORD, CREATE_USER, CREATE_DATE, 
      IS_DEL)
    values (#{checkInvDetailId,jdbcType=VARCHAR}, #{checkInvId,jdbcType=VARCHAR}, #{invertoryId,jdbcType=VARCHAR}, 
      #{checkRecord,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.maigangle.gyl.facade.entity.InvCheckInvDetail" >
    <selectKey keyProperty="checkInvDetailId" resultType="String" order="BEFORE">
 		select sys_guid() from dual
	</selectKey>
    insert into TB_INV_CHECK_INV_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="checkInvDetailId != null" >
        CHECK_INV_DETAIL_ID,
      </if>
      <if test="checkInvId != null" >
        CHECK_INV_ID,
      </if>
      <if test="invertoryId != null" >
        INVERTORY_ID,
      </if>
      <if test="checkRecord != null" >
        CHECK_RECORD,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="checkInvDetailId != null" >
        #{checkInvDetailId,jdbcType=VARCHAR},
      </if>
      <if test="checkInvId != null" >
        #{checkInvId,jdbcType=VARCHAR},
      </if>
      <if test="invertoryId != null" >
        #{invertoryId,jdbcType=VARCHAR},
      </if>
      <if test="checkRecord != null" >
        #{checkRecord,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update TB_INV_CHECK_INV_DETAIL
    <set >
      <if test="record.checkInvDetailId != null" >
        CHECK_INV_DETAIL_ID = #{record.checkInvDetailId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkInvId != null" >
        CHECK_INV_ID = #{record.checkInvId,jdbcType=VARCHAR},
      </if>
      <if test="record.invertoryId != null" >
        INVERTORY_ID = #{record.invertoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.checkRecord != null" >
        CHECK_RECORD = #{record.checkRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null" >
        IS_DEL = #{record.isDel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TB_INV_CHECK_INV_DETAIL
    set CHECK_INV_DETAIL_ID = #{record.checkInvDetailId,jdbcType=VARCHAR},
      CHECK_INV_ID = #{record.checkInvId,jdbcType=VARCHAR},
      INVERTORY_ID = #{record.invertoryId,jdbcType=VARCHAR},
      CHECK_RECORD = #{record.checkRecord,jdbcType=VARCHAR},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      IS_DEL = #{record.isDel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maigangle.gyl.facade.entity.InvCheckInvDetail" >
    update TB_INV_CHECK_INV_DETAIL
    <set >
      <if test="checkInvId != null" >
        CHECK_INV_ID = #{checkInvId,jdbcType=VARCHAR},
      </if>
      <if test="invertoryId != null" >
        INVERTORY_ID = #{invertoryId,jdbcType=VARCHAR},
      </if>
      <if test="checkRecord != null" >
        CHECK_RECORD = #{checkRecord,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=VARCHAR},
      </if>
    </set>
    where CHECK_INV_DETAIL_ID = #{checkInvDetailId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maigangle.gyl.facade.entity.InvCheckInvDetail" >
    update TB_INV_CHECK_INV_DETAIL
    set CHECK_INV_ID = #{checkInvId,jdbcType=VARCHAR},
      INVERTORY_ID = #{invertoryId,jdbcType=VARCHAR},
      CHECK_RECORD = #{checkRecord,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      IS_DEL = #{isDel,jdbcType=VARCHAR}
    where CHECK_INV_DETAIL_ID = #{checkInvDetailId,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maigangle.gyl.service.mapper.ConPaymentDetailMapper" >
  <resultMap id="BaseResultMap" type="com.maigangle.gyl.facade.entity.ConPaymentDetail" >
    <id column="PAYMENT_DETAIL_ID" property="paymentDetailId" jdbcType="VARCHAR" />
    <result column="CONTRACT_ID" property="contractId" jdbcType="VARCHAR" />
    <result column="FINANCE_ID" property="financeId" jdbcType="VARCHAR" />
    <result column="MONEY" property="money" jdbcType="DECIMAL" />
    <result column="CREATE_USER" property="createUser" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="IS_DEL" property="isDel" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            AND IS_DEL = 'N'
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PAYMENT_DETAIL_ID, CONTRACT_ID, FINANCE_ID, MONEY, CREATE_USER, CREATE_DATE, NOTES, 
    IS_DEL, STATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maigangle.gyl.facade.entity.ConPaymentDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from TB_CON_PAYMENT_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null" >
    WHERE IS_DEL = 'N'
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_CON_PAYMENT_DETAIL
    where PAYMENT_DETAIL_ID = #{paymentDetailId,jdbcType=VARCHAR} AND IS_DEL = 'N'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TB_CON_PAYMENT_DETAIL
    where PAYMENT_DETAIL_ID = #{paymentDetailId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.maigangle.gyl.facade.entity.ConPaymentDetail" >
   	<selectKey keyProperty="paymentDetailId" resultType="String" order="BEFORE">
 		select sys_guid() from dual
	</selectKey>
    insert into TB_CON_PAYMENT_DETAIL (PAYMENT_DETAIL_ID, CONTRACT_ID, FINANCE_ID, 
      MONEY, CREATE_USER, CREATE_DATE, 
      NOTES, IS_DEL, STATE
      )
    values (#{paymentDetailId,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, #{financeId,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{createUser,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{notes,jdbcType=VARCHAR}, #{isDel,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maigangle.gyl.facade.entity.ConPaymentDetail" >
   	<selectKey keyProperty="paymentDetailId" resultType="String" order="BEFORE">
 		select sys_guid() from dual
	</selectKey>
    insert into TB_CON_PAYMENT_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paymentDetailId != null" >
        PAYMENT_DETAIL_ID,
      </if>
      <if test="contractId != null" >
        CONTRACT_ID,
      </if>
      <if test="financeId != null" >
        FINANCE_ID,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="notes != null" >
        NOTES,
      </if>
      <if test="isDel != null" >
        IS_DEL,
      </if>
      <if test="state != null" >
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paymentDetailId != null" >
        #{paymentDetailId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null" >
        #{financeId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update TB_CON_PAYMENT_DETAIL
    <set >
      <if test="record.paymentDetailId != null" >
        PAYMENT_DETAIL_ID = #{record.paymentDetailId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractId != null" >
        CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.financeId != null" >
        FINANCE_ID = #{record.financeId,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        MONEY = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.createUser != null" >
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.notes != null" >
        NOTES = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        IS_DEL = #{record.isDel,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update TB_CON_PAYMENT_DETAIL
    set PAYMENT_DETAIL_ID = #{record.paymentDetailId,jdbcType=VARCHAR},
      CONTRACT_ID = #{record.contractId,jdbcType=VARCHAR},
      FINANCE_ID = #{record.financeId,jdbcType=VARCHAR},
      MONEY = #{record.money,jdbcType=DECIMAL},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      NOTES = #{record.notes,jdbcType=VARCHAR},
      IS_DEL = #{record.isDel,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maigangle.gyl.facade.entity.ConPaymentDetail" >
    update TB_CON_PAYMENT_DETAIL
    <set >
      <if test="contractId != null" >
        CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null" >
        FINANCE_ID = #{financeId,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        MONEY = #{money,jdbcType=DECIMAL},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        NOTES = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        IS_DEL = #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where PAYMENT_DETAIL_ID = #{paymentDetailId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maigangle.gyl.facade.entity.ConPaymentDetail" >
    update TB_CON_PAYMENT_DETAIL
    set CONTRACT_ID = #{contractId,jdbcType=VARCHAR},
      FINANCE_ID = #{financeId,jdbcType=VARCHAR},
      MONEY = #{money,jdbcType=DECIMAL},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      NOTES = #{notes,jdbcType=VARCHAR},
      IS_DEL = #{isDel,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR}
    where PAYMENT_DETAIL_ID = #{paymentDetailId,jdbcType=VARCHAR}
  </update>
</mapper>